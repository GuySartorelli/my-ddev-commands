#!/bin/bash

## Description: Lint documentation in a given module. Skips linting javascript in docs due to ambiguity. Pass "./" as the module name to lint the project itself.
## Usage: lint-docs <module-name>
## Flags: [{"Name":"fix","Shorthand":"f","Type":"bool","Usage":"Fix automatically-fixable linting problems."}]
## ProjectTypes: silverstripe
## ExecRaw: true

# Parse flags
FLAGS=
OPTS=$(getopt -o 'f' --long 'fix' -n 'ddev.lint-docs' -- "$@")
eval set -- "$OPTS"
while true; do
    case "$1" in
        '-f'|'--fix')
            FLAGS='--fix'
            shift
            continue
        ;;
        '--')
            shift
            break
        ;;
        *)
            echo "Internal error! got '$1'" >&2
            exit 1
        ;;
    esac
done

MODULE_NAME=$1

if [ -z "$MODULE_NAME" ]; then
    echo "A module name (or './' for the project itself) must be passed in."
    exit 1
fi

# Find module directory
if [[ $MODULE_NAME == "./" ]]; then
    MODULE_DIR="."
else
    if [[ $MODULE_NAME == *"/"* ]]; then
        LOOK_FOR=$MODULE_NAME
    else
        LOOK_FOR="**/$MODULE_NAME"
    fi
    MODULE_DIR=$(find "vendor" -maxdepth 2 -type d -path "vendor/$LOOK_FOR")
fi
if [ -z "$MODULE_DIR" ]; then
    echo "Module '$MODULE_NAME' was not found."
    exit 1
fi

if ! [ -f "$MODULE_DIR/.doclintrc" ]; then
    echo "No .doclintrc file for $MODULE_NAME - cannot lint documentation."
    echo "Did you mean 'ddev lint'?"
    exit 1
fi

if ! [ -f "vendor/bin/doclint" ]; then
    echo "Missing doclint binary - make sure you've installed silverstripe/documentation-lint"
    exit 1
fi

echo "Linting docs in $MODULE_DIR"
nvm install 18 # hack for now
vendor/bin/doclint $MODULE_DIR $FLAGS
if [ $? -ne 0 ]; then
    exit 1
fi
